name: CI

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  FLUTTER_VERSION: 3.29.2
  FLUTTER_MINIMUM_VERSION: 3.27.0
  JAVA_VERSION: 17
  JAVA_DISTRIBUTION: corretto
  IPHONE_NAME: iPhone 16 Pro
  IPHONE_OS_VERSION: 18.2

jobs:
  flutter-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze project source
        run: dart analyze . --fatal-infos

      - name: Import sort
        run: dart run import_sorter:main . --no-comments --exit-if-changed

      - name: Format code
        run: dart format . --set-exit-if-changed

      - name: Run tests
        run: flutter test ./test/* --coverage

      - name: Upload combined coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: coverage/lcov.info

  flutter-minimum-version-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_MINIMUM_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze project source
        run: dart analyze . --fatal-infos

      - name: Run tests
        run: flutter test ./test/*

  ios-tests:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: |
          brew install xcresultparser
          flutter config --enable-swift-package-manager
          flutter pub get
          cd example/ios
          flutter build ios --config-only
          cd ../..

      - name: Run tests
        run: |
          xcodebuild test -workspace ./example/ios/Runner.xcworkspace \
            -scheme EventideTests \
            -destination "platform=iOS Simulator,name=${{ env.IPHONE_NAME }},OS=${{ env.IPHONE_OS_VERSION }}" \
            -resultBundlePath build/reports/EventideTests.xcresult \
            -quiet

      - name: Prepare coverage xml file
        run: |
          xcresultparser \
            --output-format cobertura \
            build/reports/EventideTests.xcresult > build/reports/ios-coverage.xml

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: build/reports/ios-coverage.xml

  android-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build and test
        run: |
          ./example/android/gradlew testDebugUnitTest -p ./example/android/

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: android/build/reports/jacocoTestReport.xml